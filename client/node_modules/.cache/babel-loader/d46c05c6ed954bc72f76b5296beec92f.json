{"ast":null,"code":"import _regeneratorRuntime from \"/home/ubuntu/Capstone/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/ubuntu/Capstone/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { apiEndpoint } from '../config';\nimport Axios from 'axios';\nexport function getTodos(_x) {\n  return _getTodos.apply(this, arguments);\n}\n\nfunction _getTodos() {\n  _getTodos = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(idToken) {\n    var response;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log('Fetching todos');\n            _context.next = 3;\n            return Axios.get(\"\".concat(apiEndpoint, \"/todos\"), {\n              headers: {\n                'Content-Type': 'application/json',\n                'Authorization': \"Bearer \".concat(idToken)\n              }\n            });\n\n          case 3:\n            response = _context.sent;\n            console.log('Todos:', response.data);\n            return _context.abrupt(\"return\", response.data.items);\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _getTodos.apply(this, arguments);\n}\n\nexport function createTodo(_x2, _x3) {\n  return _createTodo.apply(this, arguments);\n}\n\nfunction _createTodo() {\n  _createTodo = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee2(idToken, newTodo) {\n    var response;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return Axios.post(\"\".concat(apiEndpoint, \"/todos\"), JSON.stringify(newTodo), {\n              headers: {\n                'Content-Type': 'application/json',\n                'Authorization': \"Bearer \".concat(idToken)\n              }\n            });\n\n          case 2:\n            response = _context2.sent;\n            return _context2.abrupt(\"return\", response.data.item);\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _createTodo.apply(this, arguments);\n}\n\nexport function patchTodo(_x4, _x5, _x6) {\n  return _patchTodo.apply(this, arguments);\n}\n\nfunction _patchTodo() {\n  _patchTodo = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee3(idToken, todoId, updatedTodo) {\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return Axios.patch(\"\".concat(apiEndpoint, \"/todos/\").concat(todoId), JSON.stringify(updatedTodo), {\n              headers: {\n                'Content-Type': 'application/json',\n                'Authorization': \"Bearer \".concat(idToken)\n              }\n            });\n\n          case 2:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _patchTodo.apply(this, arguments);\n}\n\nexport function deleteTodo(_x7, _x8) {\n  return _deleteTodo.apply(this, arguments);\n}\n\nfunction _deleteTodo() {\n  _deleteTodo = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee4(idToken, todoId) {\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return Axios.delete(\"\".concat(apiEndpoint, \"/todos/\").concat(todoId), {\n              headers: {\n                'Content-Type': 'application/json',\n                'Authorization': \"Bearer \".concat(idToken)\n              }\n            });\n\n          case 2:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n  return _deleteTodo.apply(this, arguments);\n}\n\nexport function getUploadUrl(_x9, _x10) {\n  return _getUploadUrl.apply(this, arguments);\n}\n\nfunction _getUploadUrl() {\n  _getUploadUrl = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee5(idToken, todoId) {\n    var response;\n    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.next = 2;\n            return Axios.post(\"\".concat(apiEndpoint, \"/todos/\").concat(todoId, \"/attachment\"), '', {\n              headers: {\n                'Content-Type': 'application/json',\n                'Authorization': \"Bearer \".concat(idToken)\n              }\n            });\n\n          case 2:\n            response = _context5.sent;\n            return _context5.abrupt(\"return\", response.data.uploadUrl);\n\n          case 4:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n  return _getUploadUrl.apply(this, arguments);\n}\n\nexport function uploadFile(_x11, _x12) {\n  return _uploadFile.apply(this, arguments);\n} //Alan Added - For Image Resizing\n\nfunction _uploadFile() {\n  _uploadFile = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee6(uploadUrl, file) {\n    return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _context6.next = 2;\n            return Axios.put(uploadUrl, file);\n\n          case 2:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6);\n  }));\n  return _uploadFile.apply(this, arguments);\n}\n\nexport function processFile(_x13, _x14) {\n  return _processFile.apply(this, arguments);\n}\n\nfunction _processFile() {\n  _processFile = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee7(idToken, todoId) {\n    return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            _context7.next = 2;\n            return Axios.post(\"\".concat(apiEndpoint, \"/todos/\").concat(todoId, \"/processimage\"), '', {\n              headers: {\n                'Content-Type': 'application/json',\n                'Authorization': \"Bearer \".concat(idToken)\n              }\n            });\n\n          case 2:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7);\n  }));\n  return _processFile.apply(this, arguments);\n}","map":{"version":3,"sources":["/home/ubuntu/Capstone/client/src/api/todos-api.ts"],"names":["apiEndpoint","Axios","getTodos","idToken","console","log","get","headers","response","data","items","createTodo","newTodo","post","JSON","stringify","item","patchTodo","todoId","updatedTodo","patch","deleteTodo","delete","getUploadUrl","uploadUrl","uploadFile","file","put","processFile"],"mappings":"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","sourcesContent":["import { apiEndpoint } from '../config'\nimport { Todo } from '../types/Todo';\nimport { CreateTodoRequest } from '../types/CreateTodoRequest';\nimport Axios from 'axios'\nimport { UpdateTodoRequest } from '../types/UpdateTodoRequest';\n\nexport async function getTodos(idToken: string): Promise<Todo[]> {\n  console.log('Fetching todos')\n \n  const response = await Axios.get(`${apiEndpoint}/todos`, {\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${idToken}`\n    },\n  })\n  console.log('Todos:', response.data)\n  return response.data.items\n\n}\n\nexport async function createTodo(\n  idToken: string,\n  newTodo: CreateTodoRequest\n): Promise<Todo> {\n  const response = await Axios.post(`${apiEndpoint}/todos`,  JSON.stringify(newTodo), {\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${idToken}`\n    }\n  })\n  return response.data.item\n}\n\nexport async function patchTodo(\n  idToken: string,\n  todoId: string,\n  updatedTodo: UpdateTodoRequest\n): Promise<void> {\n  await Axios.patch(`${apiEndpoint}/todos/${todoId}`, JSON.stringify(updatedTodo), {\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${idToken}`\n    }\n  })\n}\n\nexport async function deleteTodo(\n  idToken: string,\n  todoId: string\n): Promise<void> {\n  await Axios.delete(`${apiEndpoint}/todos/${todoId}`, {\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${idToken}`\n    }\n  })\n}\n\nexport async function getUploadUrl(\n  idToken: string,\n  todoId: string\n): Promise<string> {\n  const response = await Axios.post(`${apiEndpoint}/todos/${todoId}/attachment`, '', {\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${idToken}`\n    }\n  })\n  return response.data.uploadUrl\n}\n\nexport async function uploadFile(uploadUrl: string, file: Buffer): Promise<void> {\n  await Axios.put(uploadUrl, file)\n}\n\n//Alan Added - For Image Resizing\nexport async function processFile(\n  idToken: string,\n  todoId: string\n): Promise<void> {\n  await Axios.post(`${apiEndpoint}/todos/${todoId}/processimage`, '', {\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${idToken}`\n    }\n  })\n}"]},"metadata":{},"sourceType":"module"}